"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_components_CsvUploader_tsx",{

/***/ "./src/components/CsvUploader.tsx":
/*!****************************************!*\
  !*** ./src/components/CsvUploader.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// import React, { useState } from \"react\";\n// const CsvUploader = () => {\n//   const [csvContent, setCsvContent] = useState(\"\");\n//   const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = event.target.files?.[0];\n//     const reader = new FileReader();\n//     reader.onload = (e) => {\n//       const result = e.target?.result; // Get the result\n//       if (typeof result === \"string\") {\n//         // Check if it's a string\n//         setCsvContent(result); // Store CSV content in state\n//       } else {\n//         console.error(\"File content is not a string\");\n//       }\n//     };\n//     if (file) {\n//       reader.readAsText(file);\n//     }\n//   };\n//   return (\n//     <div className=\"flex\">\n//       <div>\n//         <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n//         <pre>{csvContent}</pre> {/* Display the CSV content */}\n//       </div>\n//     </div>\n//   );\n// };\n// export default CsvUploader;\n\nvar _s = $RefreshSig$();\n\n// Function to parse CSV content and convert it to JSON\nconst csvToJson = (csv)=>{\n    const [headerLine, ...lines] = csv.trim().split(\"\\n\");\n    const headers = headerLine.split(\"\t\"); // Assuming tab-separated values, change to ',' for comma-separated values\n    const jsonData = lines.map((line)=>{\n        const values = line.split(\"\t\");\n        const jsonObject = {};\n        headers.forEach((header, index)=>{\n            jsonObject[header] = values[index];\n        });\n        return jsonObject;\n    });\n    return jsonData;\n};\n// Main Component\nfunction CSVUploader() {\n    _s();\n    const [csvContent, setCsvContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [jsonContent, setJsonContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [lowercasedCsvContent, setLowercasedCsvContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [timer, setTimer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isCounting, setIsCounting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleFileUpload = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            var _e_target;\n            const result = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n            if (typeof result === \"string\") {\n                setCsvContent(result);\n            } else {\n                console.error(\"File content is not a string\");\n            }\n        };\n        if (file) {\n            reader.readAsText(file);\n        }\n    };\n    const handleConvertToJson = ()=>{\n        if (!csvContent) return;\n        const jsonData = csvToJson(csvContent); // Convert CSV to JSON\n        setJsonContent(jsonData);\n    };\n    const handleWait = ()=>{\n        setTimer(60);\n        setIsCounting(true);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isCounting && timer > 0) {\n            const countdown = setInterval(()=>{\n                setTimer((prevTimer)=>prevTimer - 1);\n            }, 1000);\n            return ()=>clearInterval(countdown);\n        } else if (timer === 0) {\n            setIsCounting(false);\n        }\n    }, [\n        isCounting,\n        timer\n    ]);\n    const convertCsvToLowercase = (csv)=>{\n        const [headerLine, ...lines] = csv.trim().split(\"\\n\");\n        const headers = headerLine.split(\"\t\"); // Assuming tab-separated values, change to ',' for comma-separated values\n        const lowercasedData = lines.map((line)=>{\n            const values = line.split(\"\t\").map((value)=>value.toLowerCase());\n            return values.join(\"\t\");\n        });\n        return [\n            headerLine,\n            ...lowercasedData\n        ].join(\"\\n\");\n    };\n    const handleConvertToLowercase = ()=>{\n        if (!csvContent) return;\n        const lowercasedContent = convertCsvToLowercase(csvContent); // Convert CSV column values to lowercase\n        setLowercasedCsvContent(lowercasedContent);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                lineNumber: 127,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center h-screen\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"bg-slate-400 p-9\",\n                        type: \"file\",\n                        accept: \".csv\",\n                        onChange: handleFileUpload\n                    }, void 0, false, {\n                        fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                        lineNumber: 140,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                        className: \"bg-slate-400 p-9\",\n                        accept: \".csv\",\n                        onDrop: ()=>handleFileUpload\n                    }, void 0, false, {\n                        fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                        lineNumber: 141,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                lineNumber: 139,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(CSVUploader, \"jSsJRcDOG1ewWA/jVVItjv5tUrk=\");\n_c = CSVUploader;\n/* harmony default export */ __webpack_exports__[\"default\"] = (CSVUploader);\nvar _c;\n$RefreshReg$(_c, \"CSVUploader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/components/CsvUploader.tsx\n"));

/***/ })

});