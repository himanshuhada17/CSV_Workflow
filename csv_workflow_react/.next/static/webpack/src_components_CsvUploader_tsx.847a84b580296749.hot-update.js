"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("src_components_CsvUploader_tsx",{

/***/ "./src/components/CsvUploader.tsx":
/*!****************************************!*\
  !*** ./src/components/CsvUploader.tsx ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _barrel_optimize_names_Input_mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! __barrel_optimize__?names=Input!=!@mui/material */ \"__barrel_optimize__?names=Input!=!./node_modules/@mui/material/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n// import React, { useState } from \"react\";\n// const CsvUploader = () => {\n//   const [csvContent, setCsvContent] = useState(\"\");\n//   const handleFileUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n//     const file = event.target.files?.[0];\n//     const reader = new FileReader();\n//     reader.onload = (e) => {\n//       const result = e.target?.result; // Get the result\n//       if (typeof result === \"string\") {\n//         // Check if it's a string\n//         setCsvContent(result); // Store CSV content in state\n//       } else {\n//         console.error(\"File content is not a string\");\n//       }\n//     };\n//     if (file) {\n//       reader.readAsText(file);\n//     }\n//   };\n//   return (\n//     <div className=\"flex\">\n//       <div>\n//         <input type=\"file\" accept=\".csv\" onChange={handleFileUpload} />\n//         <pre>{csvContent}</pre> {/* Display the CSV content */}\n//       </div>\n//     </div>\n//   );\n// };\n// export default CsvUploader;\n\nvar _s = $RefreshSig$();\n\n\n// Function to parse CSV content and convert it to JSON\nconst csvToJson = (csv)=>{\n    const [headerLine, ...lines] = csv.trim().split(\"\\n\");\n    const headers = headerLine.split(\"\t\"); // Assuming tab-separated values, change to ',' for comma-separated values\n    const jsonData = lines.map((line)=>{\n        const values = line.split(\"\t\");\n        const jsonObject = {};\n        headers.forEach((header, index)=>{\n            jsonObject[header] = values[index];\n        });\n        return jsonObject;\n    });\n    return jsonData;\n};\n// Main Component\nfunction CSVUploader() {\n    _s();\n    const [csvContent, setCsvContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [jsonContent, setJsonContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [lowercasedCsvContent, setLowercasedCsvContent] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [timer, setTimer] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [isCounting, setIsCounting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const handleFileUpload = (event)=>{\n        var _event_target_files;\n        const file = (_event_target_files = event.target.files) === null || _event_target_files === void 0 ? void 0 : _event_target_files[0];\n        const reader = new FileReader();\n        reader.onload = (e)=>{\n            var _e_target;\n            const result = (_e_target = e.target) === null || _e_target === void 0 ? void 0 : _e_target.result;\n            if (typeof result === \"string\") {\n                setCsvContent(result);\n            } else {\n                console.error(\"File content is not a string\");\n            }\n        };\n        if (file) {\n            reader.readAsText(file);\n        }\n    };\n    const handleConvertToJson = ()=>{\n        if (!csvContent) return;\n        const jsonData = csvToJson(csvContent); // Convert CSV to JSON\n        setJsonContent(jsonData);\n    };\n    const handleWait = ()=>{\n        setTimer(60);\n        setIsCounting(true);\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isCounting && timer > 0) {\n            const countdown = setInterval(()=>{\n                setTimer((prevTimer)=>prevTimer - 1);\n            }, 1000);\n            return ()=>clearInterval(countdown);\n        } else if (timer === 0) {\n            setIsCounting(false);\n        }\n    }, [\n        isCounting,\n        timer\n    ]);\n    const convertCsvToLowercase = (csv)=>{\n        const [headerLine, ...lines] = csv.trim().split(\"\\n\");\n        const headers = headerLine.split(\"\t\"); // Assuming tab-separated values, change to ',' for comma-separated values\n        const lowercasedData = lines.map((line)=>{\n            const values = line.split(\"\t\").map((value)=>value.toLowerCase());\n            return values.join(\"\t\");\n        });\n        return [\n            headerLine,\n            ...lowercasedData\n        ].join(\"\\n\");\n    };\n    const handleConvertToLowercase = ()=>{\n        if (!csvContent) return;\n        const lowercasedContent = convertCsvToLowercase(csvContent); // Convert CSV column values to lowercase\n        setLowercasedCsvContent(lowercasedContent);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {}, void 0, false, {\n                fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                lineNumber: 126,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex items-center justify-center h-screen\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_barrel_optimize_names_Input_mui_material__WEBPACK_IMPORTED_MODULE_2__.Input, {\n                        type: \"file\"\n                    }, void 0, false, {\n                        fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                        lineNumber: 140,\n                        columnNumber: 9\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(FileDrop, {\n                        onDrop: handleDrop,\n                        children: \"Drag and drop some files here!\"\n                    }, void 0, false, {\n                        fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                        lineNumber: 141,\n                        columnNumber: 9\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/himanshuhada/Desktop/Workflow_CSV/csv_workflow_react/src/components/CsvUploader.tsx\",\n                lineNumber: 138,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true);\n}\n_s(CSVUploader, \"jSsJRcDOG1ewWA/jVVItjv5tUrk=\");\n_c = CSVUploader;\n/* harmony default export */ __webpack_exports__[\"default\"] = (CSVUploader);\nvar _c;\n$RefreshReg$(_c, \"CSVUploader\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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d0IsQ0FBQzVDO1FBQzdCLE1BQU0sQ0FBQ0MsWUFBWSxHQUFHQyxNQUFNLEdBQUdGLElBQUlHLElBQUksR0FBR0MsS0FBSyxDQUFDO1FBQ2hELE1BQU1DLFVBQVVKLFdBQVdHLEtBQUssQ0FBQyxNQUFPLDBFQUEwRTtRQUVsSCxNQUFNeUMsaUJBQWlCM0MsTUFBTUssR0FBRyxDQUFDLENBQUNDO1lBQ2hDLE1BQU1DLFNBQVNELEtBQUtKLEtBQUssQ0FBQyxLQUFNRyxHQUFHLENBQUMsQ0FBQ3VDLFFBQVVBLE1BQU1DLFdBQVc7WUFDaEUsT0FBT3RDLE9BQU91QyxJQUFJLENBQUM7UUFDckI7UUFFQSxPQUFPO1lBQUMvQztlQUFlNEM7U0FBZSxDQUFDRyxJQUFJLENBQUM7SUFDOUM7SUFFQSxNQUFNQywyQkFBMkI7UUFDL0IsSUFBSSxDQUFDbEMsWUFBWTtRQUNqQixNQUFNbUMsb0JBQW9CTixzQkFBc0I3QixhQUFhLHlDQUF5QztRQUN0R0ssd0JBQXdCOEI7SUFDMUI7SUFFQSxxQkFDRTs7MEJBQ0UsOERBQUNDOzs7OzswQkFZRCw4REFBQ0E7Z0JBQUlDLFdBQVU7O2tDQUViLDhEQUFDekQsNEVBQUtBO3dCQUFDMEQsTUFBSzs7Ozs7O2tDQUNaLDhEQUFDQzt3QkFBU0MsUUFBUUM7a0NBQVk7Ozs7Ozs7Ozs7Ozs7O0FBTXRDO0dBekZTMUM7S0FBQUE7QUEyRlQsK0RBQWVBLFdBQVdBLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvQ3N2VXBsb2FkZXIudHN4PzU2NTIiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IFJlYWN0LCB7IHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIGNvbnN0IENzdlVwbG9hZGVyID0gKCkgPT4ge1xuLy8gICBjb25zdCBbY3N2Q29udGVudCwgc2V0Q3N2Q29udGVudF0gPSB1c2VTdGF0ZShcIlwiKTtcbi8vICAgY29uc3QgaGFuZGxlRmlsZVVwbG9hZCA9IChldmVudDogUmVhY3QuQ2hhbmdlRXZlbnQ8SFRNTElucHV0RWxlbWVudD4pID0+IHtcbi8vICAgICBjb25zdCBmaWxlID0gZXZlbnQudGFyZ2V0LmZpbGVzPy5bMF07XG4vLyAgICAgY29uc3QgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTtcblxuLy8gICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4ge1xuLy8gICAgICAgY29uc3QgcmVzdWx0ID0gZS50YXJnZXQ/LnJlc3VsdDsgLy8gR2V0IHRoZSByZXN1bHRcbi8vICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSBcInN0cmluZ1wiKSB7XG4vLyAgICAgICAgIC8vIENoZWNrIGlmIGl0J3MgYSBzdHJpbmdcbi8vICAgICAgICAgc2V0Q3N2Q29udGVudChyZXN1bHQpOyAvLyBTdG9yZSBDU1YgY29udGVudCBpbiBzdGF0ZVxuLy8gICAgICAgfSBlbHNlIHtcbi8vICAgICAgICAgY29uc29sZS5lcnJvcihcIkZpbGUgY29udGVudCBpcyBub3QgYSBzdHJpbmdcIik7XG4vLyAgICAgICB9XG4vLyAgICAgfTtcblxuLy8gICAgIGlmIChmaWxlKSB7XG4vLyAgICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTtcbi8vICAgICB9XG4vLyAgIH07XG5cbi8vICAgcmV0dXJuIChcbi8vICAgICA8ZGl2IGNsYXNzTmFtZT1cImZsZXhcIj5cbi8vICAgICAgIDxkaXY+XG4vLyAgICAgICAgIDxpbnB1dCB0eXBlPVwiZmlsZVwiIGFjY2VwdD1cIi5jc3ZcIiBvbkNoYW5nZT17aGFuZGxlRmlsZVVwbG9hZH0gLz5cbi8vICAgICAgICAgPHByZT57Y3N2Q29udGVudH08L3ByZT4gey8qIERpc3BsYXkgdGhlIENTViBjb250ZW50ICovfVxuLy8gICAgICAgPC9kaXY+XG4vLyAgICAgPC9kaXY+XG4vLyAgICk7XG4vLyB9O1xuXG4vLyBleHBvcnQgZGVmYXVsdCBDc3ZVcGxvYWRlcjtcbmltcG9ydCB7IElucHV0IH0gZnJvbSBcIkBtdWkvbWF0ZXJpYWxcIjtcbmltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlIH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIEZ1bmN0aW9uIHRvIHBhcnNlIENTViBjb250ZW50IGFuZCBjb252ZXJ0IGl0IHRvIEpTT05cbmNvbnN0IGNzdlRvSnNvbiA9IChjc3Y6IHN0cmluZykgPT4ge1xuICBjb25zdCBbaGVhZGVyTGluZSwgLi4ubGluZXNdID0gY3N2LnRyaW0oKS5zcGxpdChcIlxcblwiKTtcbiAgY29uc3QgaGVhZGVycyA9IGhlYWRlckxpbmUuc3BsaXQoXCJcXHRcIik7IC8vIEFzc3VtaW5nIHRhYi1zZXBhcmF0ZWQgdmFsdWVzLCBjaGFuZ2UgdG8gJywnIGZvciBjb21tYS1zZXBhcmF0ZWQgdmFsdWVzXG5cbiAgY29uc3QganNvbkRhdGEgPSBsaW5lcy5tYXAoKGxpbmUpID0+IHtcbiAgICBjb25zdCB2YWx1ZXMgPSBsaW5lLnNwbGl0KFwiXFx0XCIpO1xuICAgIGNvbnN0IGpzb25PYmplY3Q6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fTtcblxuICAgIGhlYWRlcnMuZm9yRWFjaCgoaGVhZGVyLCBpbmRleCkgPT4ge1xuICAgICAganNvbk9iamVjdFtoZWFkZXJdID0gdmFsdWVzW2luZGV4XTtcbiAgICB9KTtcblxuICAgIHJldHVybiBqc29uT2JqZWN0O1xuICB9KTtcblxuICByZXR1cm4ganNvbkRhdGE7XG59O1xuXG4vLyBNYWluIENvbXBvbmVudFxuZnVuY3Rpb24gQ1NWVXBsb2FkZXIoKSB7XG4gIGNvbnN0IFtjc3ZDb250ZW50LCBzZXRDc3ZDb250ZW50XSA9IHVzZVN0YXRlPHN0cmluZz4oXCJcIik7XG4gIGNvbnN0IFtqc29uQ29udGVudCwgc2V0SnNvbkNvbnRlbnRdID0gdXNlU3RhdGU8b2JqZWN0W10+KFtdKTtcbiAgY29uc3QgW2xvd2VyY2FzZWRDc3ZDb250ZW50LCBzZXRMb3dlcmNhc2VkQ3N2Q29udGVudF0gPSB1c2VTdGF0ZTxzdHJpbmc+KFwiXCIpO1xuICBjb25zdCBbdGltZXIsIHNldFRpbWVyXSA9IHVzZVN0YXRlPG51bWJlcj4oMCk7XG4gIGNvbnN0IFtpc0NvdW50aW5nLCBzZXRJc0NvdW50aW5nXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcblxuICBjb25zdCBoYW5kbGVGaWxlVXBsb2FkID0gKGV2ZW50OiBSZWFjdC5DaGFuZ2VFdmVudDxIVE1MSW5wdXRFbGVtZW50PikgPT4ge1xuICAgIGNvbnN0IGZpbGUgPSBldmVudC50YXJnZXQuZmlsZXM/LlswXTtcbiAgICBjb25zdCByZWFkZXIgPSBuZXcgRmlsZVJlYWRlcigpO1xuXG4gICAgcmVhZGVyLm9ubG9hZCA9IChlKSA9PiB7XG4gICAgICBjb25zdCByZXN1bHQgPSBlLnRhcmdldD8ucmVzdWx0O1xuICAgICAgaWYgKHR5cGVvZiByZXN1bHQgPT09IFwic3RyaW5nXCIpIHtcbiAgICAgICAgc2V0Q3N2Q29udGVudChyZXN1bHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihcIkZpbGUgY29udGVudCBpcyBub3QgYSBzdHJpbmdcIik7XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmIChmaWxlKSB7XG4gICAgICByZWFkZXIucmVhZEFzVGV4dChmaWxlKTtcbiAgICB9XG4gIH07XG5cbiAgY29uc3QgaGFuZGxlQ29udmVydFRvSnNvbiA9ICgpID0+IHtcbiAgICBpZiAoIWNzdkNvbnRlbnQpIHJldHVybjtcbiAgICBjb25zdCBqc29uRGF0YSA9IGNzdlRvSnNvbihjc3ZDb250ZW50KTsgLy8gQ29udmVydCBDU1YgdG8gSlNPTlxuICAgIHNldEpzb25Db250ZW50KGpzb25EYXRhKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVXYWl0ID0gKCkgPT4ge1xuICAgIHNldFRpbWVyKDYwKTtcbiAgICBzZXRJc0NvdW50aW5nKHRydWUpO1xuICB9O1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKGlzQ291bnRpbmcgJiYgdGltZXIgPiAwKSB7XG4gICAgICBjb25zdCBjb3VudGRvd24gPSBzZXRJbnRlcnZhbCgoKSA9PiB7XG4gICAgICAgIHNldFRpbWVyKChwcmV2VGltZXIpID0+IHByZXZUaW1lciAtIDEpO1xuICAgICAgfSwgMTAwMCk7XG5cbiAgICAgIHJldHVybiAoKSA9PiBjbGVhckludGVydmFsKGNvdW50ZG93bik7XG4gICAgfSBlbHNlIGlmICh0aW1lciA9PT0gMCkge1xuICAgICAgc2V0SXNDb3VudGluZyhmYWxzZSk7XG4gICAgfVxuICB9LCBbaXNDb3VudGluZywgdGltZXJdKTtcblxuICBjb25zdCBjb252ZXJ0Q3N2VG9Mb3dlcmNhc2UgPSAoY3N2OiBzdHJpbmcpID0+IHtcbiAgICBjb25zdCBbaGVhZGVyTGluZSwgLi4ubGluZXNdID0gY3N2LnRyaW0oKS5zcGxpdChcIlxcblwiKTtcbiAgICBjb25zdCBoZWFkZXJzID0gaGVhZGVyTGluZS5zcGxpdChcIlxcdFwiKTsgLy8gQXNzdW1pbmcgdGFiLXNlcGFyYXRlZCB2YWx1ZXMsIGNoYW5nZSB0byAnLCcgZm9yIGNvbW1hLXNlcGFyYXRlZCB2YWx1ZXNcblxuICAgIGNvbnN0IGxvd2VyY2FzZWREYXRhID0gbGluZXMubWFwKChsaW5lKSA9PiB7XG4gICAgICBjb25zdCB2YWx1ZXMgPSBsaW5lLnNwbGl0KFwiXFx0XCIpLm1hcCgodmFsdWUpID0+IHZhbHVlLnRvTG93ZXJDYXNlKCkpO1xuICAgICAgcmV0dXJuIHZhbHVlcy5qb2luKFwiXFx0XCIpO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIFtoZWFkZXJMaW5lLCAuLi5sb3dlcmNhc2VkRGF0YV0uam9pbihcIlxcblwiKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVDb252ZXJ0VG9Mb3dlcmNhc2UgPSAoKSA9PiB7XG4gICAgaWYgKCFjc3ZDb250ZW50KSByZXR1cm47XG4gICAgY29uc3QgbG93ZXJjYXNlZENvbnRlbnQgPSBjb252ZXJ0Q3N2VG9Mb3dlcmNhc2UoY3N2Q29udGVudCk7IC8vIENvbnZlcnQgQ1NWIGNvbHVtbiB2YWx1ZXMgdG8gbG93ZXJjYXNlXG4gICAgc2V0TG93ZXJjYXNlZENzdkNvbnRlbnQobG93ZXJjYXNlZENvbnRlbnQpO1xuICB9O1xuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxkaXY+XG4gICAgICAgIHsvKiA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZUNvbnZlcnRUb0pzb259PkNvbnZlcnQgdG8gSlNPTjwvYnV0dG9uPlxuICAgICAgPGJ1dHRvbiBvbkNsaWNrPXtoYW5kbGVDb252ZXJ0VG9Mb3dlcmNhc2V9PkNvbnZlcnQgdG8gTG93ZXJjYXNlPC9idXR0b24+XG4gICAgICA8YnV0dG9uIG9uQ2xpY2s9e2hhbmRsZVdhaXR9PldhaXQ8L2J1dHRvbj5cbiAgICAgIDxoMz5PcmlnaW5hbCBDU1YgQ29udGVudDwvaDM+XG4gICAgICA8cHJlPntjc3ZDb250ZW50fTwvcHJlPlxuICAgICAgPGgzPkNvbnZlcnRlZCBKU09OIENvbnRlbnQ8L2gzPlxuICAgICAgPHByZT57SlNPTi5zdHJpbmdpZnkoanNvbkNvbnRlbnQsIG51bGwsIDIpfTwvcHJlPlxuICAgICAgPGgzPkxvd2VyY2FzZWQgQ1NWIENvbnRlbnQ8L2gzPlxuICAgICAgPHByZT57bG93ZXJjYXNlZENzdkNvbnRlbnR9PC9wcmU+XG4gICAgICB7aXNDb3VudGluZyAmJiA8aDM+VGltZSBSZW1haW5pbmc6IHt0aW1lcn0gc2Vjb25kczwvaDM+fSAqL31cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJmbGV4IGl0ZW1zLWNlbnRlciBqdXN0aWZ5LWNlbnRlciBoLXNjcmVlblwiPlxuICAgICAgICB7LyogPGlucHV0IGNsYXNzTmFtZT1cImJnLXNsYXRlLTQwMCBwLTlcIiB0eXBlPVwiZmlsZVwiIGFjY2VwdD1cIi5jc3ZcIiBvbkNoYW5nZT17aGFuZGxlRmlsZVVwbG9hZH0gLz4gKi99XG4gICAgICAgIDxJbnB1dCB0eXBlPVwiZmlsZVwiLz5cbiAgICAgICAgPEZpbGVEcm9wIG9uRHJvcD17aGFuZGxlRHJvcH0+XG4gICAgICBEcmFnIGFuZCBkcm9wIHNvbWUgZmlsZXMgaGVyZSFcbiAgICA8L0ZpbGVEcm9wPlxuICAgICAgPC9kaXY+XG4gICAgPC8+XG4gICk7XG59XG5cbmV4cG9ydCBkZWZhdWx0IENTVlVwbG9hZGVyO1xuIl0sIm5hbWVzIjpbIklucHV0IiwiUmVhY3QiLCJ1c2VFZmZlY3QiLCJ1c2VTdGF0ZSIsImNzdlRvSnNvbiIsImNzdiIsImhlYWRlckxpbmUiLCJsaW5lcyIsInRyaW0iLCJzcGxpdCIsImhlYWRlcnMiLCJqc29uRGF0YSIsIm1hcCIsImxpbmUiLCJ2YWx1ZXMiLCJqc29uT2JqZWN0IiwiZm9yRWFjaCIsImhlYWRlciIsImluZGV4IiwiQ1NWVXBsb2FkZXIiLCJjc3ZDb250ZW50Iiwic2V0Q3N2Q29udGVudCIsImpzb25Db250ZW50Iiwic2V0SnNvbkNvbnRlbnQiLCJsb3dlcmNhc2VkQ3N2Q29udGVudCIsInNldExvd2VyY2FzZWRDc3ZDb250ZW50IiwidGltZXIiLCJzZXRUaW1lciIsImlzQ291bnRpbmciLCJzZXRJc0NvdW50aW5nIiwiaGFuZGxlRmlsZVVwbG9hZCIsImV2ZW50IiwiZmlsZSIsInRhcmdldCIsImZpbGVzIiwicmVhZGVyIiwiRmlsZVJlYWRlciIsIm9ubG9hZCIsImUiLCJyZXN1bHQiLCJjb25zb2xlIiwiZXJyb3IiLCJyZWFkQXNUZXh0IiwiaGFuZGxlQ29udmVydFRvSnNvbiIsImhhbmRsZVdhaXQiLCJjb3VudGRvd24iLCJzZXRJbnRlcnZhbCIsInByZXZUaW1lciIsImNsZWFySW50ZXJ2YWwiLCJjb252ZXJ0Q3N2VG9Mb3dlcmNhc2UiLCJsb3dlcmNhc2VkRGF0YSIsInZhbHVlIiwidG9Mb3dlckNhc2UiLCJqb2luIiwiaGFuZGxlQ29udmVydFRvTG93ZXJjYXNlIiwibG93ZXJjYXNlZENvbnRlbnQiLCJkaXYiLCJjbGFzc05hbWUiLCJ0eXBlIiwiRmlsZURyb3AiLCJvbkRyb3AiLCJoYW5kbGVEcm9wIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/CsvUploader.tsx\n"));

/***/ })

});